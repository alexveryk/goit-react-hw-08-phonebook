{"version":3,"file":"static/js/343.bc1d0bd8.chunk.js","mappings":"yOAGaA,EAAW,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,GAAIC,EAAW,EAAXA,KACvBC,GAAWC,EAAAA,EAAAA,MAGjB,OACE,4BACE,uBAAIF,KACJ,mBAAQG,KAAK,SAASC,QALL,kBAAMH,GAASI,EAAAA,EAAAA,IAAcN,GAA7B,EAKjB,sBAKL,ECfYO,EAAgB,SAAAC,GAAK,OAAIA,EAAMC,SAASC,OAAnB,EAIrBC,EAAoB,SAAAH,GAAK,OAAIA,EAAMC,SAASG,KAAnB,ECAzBC,EAAc,WACzB,IAAMJ,GAAWK,EAAAA,EAAAA,IAAYH,GAE7B,OACE,wBACGF,EAASM,KAAI,gBAAGf,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAP,OACZ,yBACE,SAACF,EAAD,CAAUC,GAAIA,EAAIC,KAAMA,KADjBD,EADG,KAOnB,ECbYgB,EAAgB,WAC3B,IAAMd,GAAWC,EAAAA,EAAAA,MAcjB,OACE,kBAAMc,SAba,SAAAC,GACnBA,EAAEC,iBACF,IAAMC,EAAOF,EAAEG,cACTpB,EAAOmB,EAAKE,SAASrB,KAAKsB,MAChC,GAAa,KAATtB,EAGF,OAFAC,GAASsB,EAAAA,EAAAA,IAAWvB,SACpBmB,EAAKK,QAGPC,MAAM,6CACP,EAGC,WACE,kBAAOC,KAAK,UACZ,mBAAQvB,KAAK,SAAb,4BAGL,EChBc,SAASL,IACtB,IAAMG,GAAWC,EAAAA,EAAAA,MACXyB,GAAYd,EAAAA,EAAAA,IAAYP,GAM9B,OAJAsB,EAAAA,EAAAA,YAAU,WACR3B,GAAS4B,EAAAA,EAAAA,MACV,GAAE,CAAC5B,KAGF,iCACE,SAAC6B,EAAA,EAAD,WACE,gDAEF,SAACf,EAAD,KACA,yBAAMY,GAAa,4BACnB,SAACf,EAAD,MAGL,C","sources":["components/Contacts/Contacts.js","redux/contacts/selectors.js","components/ContactList/ContactList.js","components/ContactEditor/ContactEditor.js","pages/Contacts.js"],"sourcesContent":["import { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations';\n\nexport const Contacts = ({ id, text }) => {\n  const dispatch = useDispatch();\n  const handleDelete = () => dispatch(deleteContact(id));\n\n  return (\n    <div>\n      <p>{text}</p>\n      <button type=\"button\" onClick={handleDelete}>\n        Delete\n      </button>\n    </div>\n  );\n};\n","export const selectLoading = state => state.contacts.loading;\n\nexport const selectFilter = state => state.contacts.filter;\n\nexport const selectAllContacts = state => state.contacts.items;\n","import { useSelector } from 'react-redux';\nimport { Contacts } from '../Contacts/Contacts';\nimport { selectAllContacts } from 'redux/contacts/selectors';\n\nexport const ContactList = () => {\n  const contacts = useSelector(selectAllContacts);\n\n  return (\n    <ul>\n      {contacts.map(({ id, text }) => (\n        <li key={id}>\n          <Contacts id={id} text={text} />\n        </li>\n      ))}\n    </ul>\n  );\n};\n","import { useDispatch } from 'react-redux';\nimport { addContact } from 'redux/contacts/operations';\n\nexport const ContactEditor = () => {\n  const dispatch = useDispatch();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    const text = form.elements.text.value;\n    if (text !== '') {\n      dispatch(addContact(text));\n      form.reset();\n      return;\n    }\n    alert('Contacts cannot be empty. Enter some text!');\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <input name=\"text\" />\n      <button type=\"submit\">Add contacts</button>\n    </form>\n  );\n};\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Helmet } from 'react-helmet';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { ContactEditor } from 'components/ContactEditor/ContactEditor';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { selectLoading } from 'redux/contacts/selectors';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectLoading);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <Helmet>\n        <title>Your contacts</title>\n      </Helmet>\n      <ContactEditor />\n      <div>{isLoading && 'Request in progress...'}</div>\n      <ContactList />\n    </>\n  );\n}\n"],"names":["Contacts","id","text","dispatch","useDispatch","type","onClick","deleteContact","selectLoading","state","contacts","loading","selectAllContacts","items","ContactList","useSelector","map","ContactEditor","onSubmit","e","preventDefault","form","currentTarget","elements","value","addContact","reset","alert","name","isLoading","useEffect","fetchContacts","Helmet"],"sourceRoot":""}